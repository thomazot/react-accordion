{"version":3,"sources":["components/AccordionItem/AccordionItem.tsx","components/Accordion/Accordion.tsx","pages/Home/Home.tsx","services/Api.ts","App.tsx","index.tsx"],"names":["AccordionItem","id","name","level","children","parentChecked","useState","checked","setChecked","useEffect","data-level","data-testid","type","onChange","htmlFor","length","items","Accordion","map","item","Home","data","setData","url","fetch","headers","Accept","then","response","json","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAwCeA,EAhCO,SAAC,GAMG,IALxBC,EAKuB,EALvBA,GACAC,EAIuB,EAJvBA,KACAC,EAGuB,EAHvBA,MACAC,EAEuB,EAFvBA,SAEuB,IADvBC,qBACuB,WACOC,oBAAS,GADhB,mBAChBC,EADgB,KACPC,EADO,KAOvB,OAJAC,qBAAU,WACRD,EAAWH,KACV,CAACG,EAAYH,IAGd,qBAAIK,aAAYP,EAAOQ,cAAA,yBAA+BV,GAAtD,UACE,gCACE,uBACEC,KAAK,iBACLD,GAAE,yBAAoBA,GACtBW,KAAK,WACLL,QAASA,EACTM,SAAU,kBAAML,GAAYD,MAE9B,uBAAOO,QAAO,yBAAoBb,GAAlC,SAAyCC,OAE1CE,EAASW,OAAS,GACjB,cAAC,EAAD,CAAWC,MAAOZ,EAAUC,cAAeE,QCdpCU,EAhBG,SAAC,GAMZ,IALLD,EAKI,EALJA,MAKI,IAJJX,qBAII,SACJ,OACE,6BACGW,EAAME,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,2BAAiCA,GAAjC,IAAuCd,cAAeA,IAAlCc,EAAKlB,UCVjC,IAeemB,EAfF,WAAO,IAAD,EACOd,mBAAuB,IAD9B,mBACVe,EADU,KACJC,EADI,KAQjB,OANAb,qBAAU,WCNG,IAAgBc,KDOT,gCCNbC,MAAMD,EAAK,CAChBE,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAETC,MAAK,SAACC,GAAD,OAAcA,EAASC,WDCsBF,MAAK,SAACN,GAAD,OACtDC,EAAQD,QAET,CAACC,IAGF,8BACE,cAAC,EAAD,CAAWN,MAAOK,OEHTS,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.13e06e85.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { IAccordionItem } from \"components/AccordionItem\"\nimport Accordion from \"components/Accordion/Accordion\"\n\ninterface AccordionItemProp extends IAccordionItem {\n  parentChecked?: boolean\n}\n\nconst AccordionItem = ({\n  id,\n  name,\n  level,\n  children,\n  parentChecked = false\n}: AccordionItemProp) => {\n  const [checked, setChecked] = useState(false)\n\n  useEffect(() => {\n    setChecked(parentChecked)\n  }, [setChecked, parentChecked])\n\n  return (\n    <li data-level={level} data-testid={`accordion-item-${id}`}>\n      <div>\n        <input\n          name=\"accordion-item\"\n          id={`accordion-item-${id}`}\n          type=\"checkbox\"\n          checked={checked}\n          onChange={() => setChecked(!checked)}\n        />\n        <label htmlFor={`accordion-item-${id}`}>{name}</label>\n      </div>\n      {children.length > 0 && (\n        <Accordion items={children} parentChecked={checked} />\n      )}\n    </li>\n  )\n}\n\nexport default AccordionItem\n","import React from \"react\"\nimport { IAccordion } from \"components/Accordion\"\nimport AccordionItem from \"components/AccordionItem\"\n\nconst Accordion = ({\n  items,\n  parentChecked = false\n}: {\n  items: IAccordion[]\n  parentChecked?: boolean\n}) => {\n  return (\n    <ul>\n      {items.map((item) => (\n        <AccordionItem key={item.id} {...item} parentChecked={parentChecked} />\n      ))}\n    </ul>\n  )\n}\n\nexport default Accordion\n","import Accordion, { IAccordion } from \"components/Accordion\"\nimport React, { useEffect, useState } from \"react\"\nimport Api from \"services\"\n\nconst Home = () => {\n  const [data, setData] = useState<IAccordion[]>([])\n  useEffect(() => {\n    Api<IAccordion[]>(\"/react-accordion/data/db.json\").then((data) =>\n      setData(data)\n    )\n  }, [setData])\n\n  return (\n    <div>\n      <Accordion items={data} />\n    </div>\n  )\n}\n\nexport default Home\n","export default function Api<T>(url: string): Promise<T> {\n  return fetch(url, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    }\n  }).then((response) => response.json())\n}\n","import React from \"react\"\nimport Home from \"pages/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}